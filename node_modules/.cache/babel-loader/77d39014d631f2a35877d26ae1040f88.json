{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ProductData } from \"../data/ProductData\";\nimport Swal from \"sweetalert2\";\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    products: ProductData,\n    carts: ProductData.slice(2, 4),\n    favorites: ProductData.slice(1, 4),\n    single: null // her bir ürün temsil edelr\n\n  },\n  reducers: {\n    //sepete ürün eklemek için kullanılacak\n    AddToCart: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let sepeteEklenecekUrun = state.carts.find(item => item.id === parseInt(id));\n\n      if (sepeteEklenecekUrun === undefined) {\n        //sepete eklemek istediğim ürün bilgilerine getirecek ilgili rest servisi çağırılır\n        let item = state.products.find(item => item.id === parseInt(id));\n        item.quantity = 1;\n        state.carts.push(item);\n        Swal.fire({\n          title: 'Başarılı',\n          text: \"Ürün sepete eklendi!\",\n          icon: 'success',\n          showConfirmButton: false,\n          timer: 2000\n        });\n      }\n    },\n    getProductById: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let urunDetay = state.products.find(item => item.id === parseInt(id));\n      state.single = urunDetay;\n    },\n    updateCart: (state, action) => {\n      let {\n        val,\n        id\n      } = action.payload;\n      state.carts.forEach(item => {\n        if (item.id === parseInt(id)) {\n          item.quantity = val;\n        }\n      });\n    },\n    removeCart: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let sepetinOnSonHali = state.carts.filter(item => item.id !== parseInt(id));\n      state.carts = sepetinOnSonHali;\n    },\n    //sepeti comple silmek için\n    clearCart: state => {\n      state.carts = [];\n    },\n    addToFavorites: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let item = state.favorites.find(item => item.id === parseInt(id));\n\n      if (item === undefined) {\n        let urunFavori = state.products.find(item => item.id === parseInt(id));\n        urunFavori.quantity = 1;\n        state.favorites.push(urunFavori);\n        Swal.fire({\n          title: 'Başarılı',\n          text: 'İlgili ürün favorilere eklenmiştir',\n          icon: 'success'\n        });\n      } else {\n        Swal.fire('Başarsız', 'İlgili ürün favorilere eklenemedi', 'warning');\n      }\n    },\n    removeToFav: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let favorilerinOnSonHali = state.favorites.filter(item => item.id !== parseInt(id));\n      state.favorites = favorilerinOnSonHali;\n    }\n  }\n});\nconst productsReducer = productsSlice.reducer;\nexport default productsReducer;","map":{"version":3,"names":["createSlice","ProductData","Swal","productsSlice","name","initialState","products","carts","slice","favorites","single","reducers","AddToCart","state","action","id","payload","sepeteEklenecekUrun","find","item","parseInt","undefined","quantity","push","fire","title","text","icon","showConfirmButton","timer","getProductById","urunDetay","updateCart","val","forEach","removeCart","sepetinOnSonHali","filter","clearCart","addToFavorites","urunFavori","removeToFav","favorilerinOnSonHali","productsReducer","reducer"],"sources":["/Users/aydin/Desktop/btakademi.web/javascript/reactjs/e-commerce-final/ecommerce-app-2/src/app/slices/product.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {ProductData} from \"../data/ProductData\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nconst productsSlice = createSlice({\r\n    name :'products',\r\n    initialState: {\r\n        products : ProductData,\r\n        carts: ProductData.slice(2,4),\r\n        favorites : ProductData.slice(1,4),\r\n        single : null,  // her bir ürün temsil edelr\r\n\r\n    },\r\n    reducers : {\r\n        //sepete ürün eklemek için kullanılacak\r\n        AddToCart:(state,action) => {\r\n               let {id} = action.payload;\r\n               let sepeteEklenecekUrun = state.carts.find(item => item.id === parseInt(id))\r\n               if(sepeteEklenecekUrun === undefined)\r\n               {\r\n                //sepete eklemek istediğim ürün bilgilerine getirecek ilgili rest servisi çağırılır\r\n                   let item = state.products.find(item => item.id === parseInt(id))\r\n                   item.quantity = 1\r\n                   state.carts.push(item)\r\n                   Swal.fire(\r\n                    {\r\n                     title :'Başarılı',\r\n                     text : \"Ürün sepete eklendi!\",\r\n                     icon :'success',\r\n                     showConfirmButton : false,\r\n                     timer : 2000\r\n                    }\r\n                   )\r\n               }\r\n        },\r\n        getProductById: (state,action) => {\r\n             let {id}   =  action.payload;\r\n             let urunDetay = state.products.find(item=> item.id === parseInt(id))\r\n             state.single = urunDetay\r\n        },\r\n        updateCart : (state,action) => {\r\n          let {val,id}  = action.payload;\r\n          state.carts.forEach(item=> {\r\n            if(item.id === parseInt(id)) {\r\n                item.quantity = val\r\n            }\r\n          })\r\n        },\r\n        removeCart : (state,action) => {\r\n                let {id} = action.payload;\r\n                let sepetinOnSonHali  = state.carts.filter(item=> item.id !== parseInt(id))\r\n                state.carts = sepetinOnSonHali\r\n        },\r\n        //sepeti comple silmek için\r\n        clearCart : (state) => {\r\n            state.carts = []\r\n        },\r\n        addToFavorites : (state,action) => {\r\n\r\n            let{id}= action.payload;\r\n            let item= state.favorites.find(item=> item.id ===parseInt(id))\r\n            if(item=== undefined)\r\n            {\r\n                let urunFavori = state.products.find(item=> item.id === parseInt(id))\r\n                urunFavori.quantity=1\r\n                state.favorites.push(urunFavori)\r\n                Swal.fire(\r\n                    {\r\n                    title:'Başarılı',\r\n                    text:'İlgili ürün favorilere eklenmiştir',\r\n                    icon:'success'\r\n                  }\r\n    \r\n                )\r\n    \r\n             }\r\n            else\r\n            {\r\n                Swal.fire('Başarsız','İlgili ürün favorilere eklenemedi','warning')\r\n            }\r\n    \r\n        }, \r\n     removeToFav : (state,action) => {\r\n        let {id} = action.payload;\r\n        let favorilerinOnSonHali  = state.favorites.filter(item=> item.id !== parseInt(id))\r\n        state.favorites = favorilerinOnSonHali\r\n},\r\n\r\n    }\r\n})\r\n\r\nconst productsReducer = productsSlice.reducer\r\nexport default productsReducer\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}