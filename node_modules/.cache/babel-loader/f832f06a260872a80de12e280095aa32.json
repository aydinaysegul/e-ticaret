{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ProductData } from \"../data/ProductData\";\nimport Swal from \"sweetalert2\";\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    products: ProductData,\n    carts: ProductData.slice(2, 4),\n    favorites: ProductData.slice(1, 4),\n    single: null // her bir ürün temsil edelr\n\n  },\n  reducers: {\n    //sepete ürün eklemek için kullanılacak\n    AddToCart: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let sepeteEklenecekUrun = state.carts.find(item => item.id === parseInt(id));\n\n      if (sepeteEklenecekUrun === undefined) {\n        //sepete eklemek istediğim ürün bilgilerine getirecek ilgili rest servisi çağırılır\n        let item = state.products.find(item => item.id === parseInt(id));\n        item.quantity = 1;\n        state.carts.push(item);\n        Swal.fire({\n          title: 'Başarılı',\n          text: \"Ürün sepete eklendi!\",\n          icon: 'success',\n          showConfirmButton: false,\n          timer: 2000\n        });\n      }\n    },\n    getProductById: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let urunDetay = state.products.find(item => item.id === parseInt(id));\n      state.single = urunDetay;\n    },\n    updateCart: (state, action) => {\n      let {\n        val,\n        id\n      } = action.payload;\n      state.carts.forEach(item => {\n        if (item.id === parseInt(id)) {\n          item.quantity = val;\n        }\n      });\n    },\n    removeCart: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let sepetinOnSonHali = state.carts.filter(item => item.id !== parseInt(id));\n      state.carts = sepetinOnSonHali;\n    },\n    //sepeti comple silmek için\n    clearCart: state => {\n      state.carts = [];\n    },\n    addToFavorites: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let item = state.favorites.find(item => item.id === parseInt(id));\n\n      if (item === undefined) {\n        let urunFavori = state.products.find(item => item.id === parseInt(id));\n        urunFavori.quantity = 1;\n        state.favorites.push(urunFavori);\n        Swal.fire({\n          title: 'Başarılı',\n          text: 'İlgili ürün favorilere eklenmiştir',\n          icon: 'success'\n        });\n      } else {\n        Swal.fire('Başarsız', 'İlgili ürün favorilere eklenemedi', 'warning');\n      }\n    },\n    removeToFav: (state, action) => {\n      let {\n        id\n      } = action.payload;\n      let favorilerinOnSonHali = state.favorites.filter(item => item.id !== parseInt(id));\n      state.favorites = favorilerinOnSonHali;\n    },\n    //favorileri temizle\n    clearFav: state => {\n      state.favorites = []; // state içindeki favori arrayını temizlemiş oluyor \n    }\n  }\n});\nconst productsReducer = productsSlice.reducer;\nexport default productsReducer;","map":{"version":3,"names":["createSlice","ProductData","Swal","productsSlice","name","initialState","products","carts","slice","favorites","single","reducers","AddToCart","state","action","id","payload","sepeteEklenecekUrun","find","item","parseInt","undefined","quantity","push","fire","title","text","icon","showConfirmButton","timer","getProductById","urunDetay","updateCart","val","forEach","removeCart","sepetinOnSonHali","filter","clearCart","addToFavorites","urunFavori","removeToFav","favorilerinOnSonHali","clearFav","productsReducer","reducer"],"sources":["/Users/aydin/Desktop/btakademi.web/javascript/reactjs/hoca-ecommerce/ecommerce-app-2/src/app/slices/product.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { ProductData } from \"../data/ProductData\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState: {\r\n        products: ProductData,\r\n        carts: ProductData.slice(2, 4),\r\n        favorites: ProductData.slice(1, 4),\r\n        single: null,  // her bir ürün temsil edelr\r\n\r\n    },\r\n    reducers: {\r\n        //sepete ürün eklemek için kullanılacak\r\n        AddToCart: (state, action) => {\r\n            let { id } = action.payload;\r\n            let sepeteEklenecekUrun = state.carts.find(item => item.id === parseInt(id))\r\n            if (sepeteEklenecekUrun === undefined) {\r\n                //sepete eklemek istediğim ürün bilgilerine getirecek ilgili rest servisi çağırılır\r\n                let item = state.products.find(item => item.id === parseInt(id))\r\n                item.quantity = 1\r\n                state.carts.push(item)\r\n                Swal.fire(\r\n                    {\r\n                        title: 'Başarılı',\r\n                        text: \"Ürün sepete eklendi!\",\r\n                        icon: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 2000\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        getProductById: (state, action) => {\r\n            let { id } = action.payload;\r\n            let urunDetay = state.products.find(item => item.id === parseInt(id))\r\n            state.single = urunDetay\r\n        },\r\n        updateCart: (state, action) => {\r\n            let { val, id } = action.payload;\r\n            state.carts.forEach(item => {\r\n                if (item.id === parseInt(id)) {\r\n                    item.quantity = val\r\n                }\r\n            })\r\n        },\r\n        removeCart: (state, action) => {\r\n            let { id } = action.payload;\r\n            let sepetinOnSonHali = state.carts.filter(item => item.id !== parseInt(id))\r\n            state.carts = sepetinOnSonHali\r\n        },\r\n        //sepeti comple silmek için\r\n        clearCart: (state) => {\r\n            state.carts = []\r\n        },\r\n        addToFavorites: (state, action) => {\r\n\r\n            let { id } = action.payload;\r\n            let item = state.favorites.find(item => item.id === parseInt(id))\r\n            if (item === undefined) {\r\n                let urunFavori = state.products.find(item => item.id === parseInt(id))\r\n                urunFavori.quantity = 1\r\n                state.favorites.push(urunFavori)\r\n                Swal.fire(\r\n                    {\r\n                        title: 'Başarılı',\r\n                        text: 'İlgili ürün favorilere eklenmiştir',\r\n                        icon: 'success'\r\n                    }\r\n\r\n                )\r\n\r\n            }\r\n            else {\r\n                Swal.fire('Başarsız', 'İlgili ürün favorilere eklenemedi', 'warning')\r\n            }\r\n\r\n        },\r\n        removeToFav: (state, action) => {\r\n            let { id } = action.payload;\r\n            let favorilerinOnSonHali = state.favorites.filter(item => item.id !== parseInt(id))\r\n            state.favorites = favorilerinOnSonHali\r\n        },\r\n        //favorileri temizle\r\n        clearFav: (state) => {\r\n            state.favorites = [] // state içindeki favori arrayını temizlemiş oluyor \r\n        },\r\n\r\n    }\r\n})\r\n\r\nconst productsReducer = productsSlice.reducer\r\nexport default productsReducer\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,UADwB;EAE9BC,YAAY,EAAE;IACVC,QAAQ,EAAEL,WADA;IAEVM,KAAK,EAAEN,WAAW,CAACO,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAFG;IAGVC,SAAS,EAAER,WAAW,CAACO,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAHD;IAIVE,MAAM,EAAE,IAJE,CAIK;;EAJL,CAFgB;EAS9BC,QAAQ,EAAE;IACN;IACAC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,IAAI;QAAEC;MAAF,IAASD,MAAM,CAACE,OAApB;MACA,IAAIC,mBAAmB,GAAGJ,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAA7C,CAA1B;;MACA,IAAIE,mBAAmB,KAAKI,SAA5B,EAAuC;QACnC;QACA,IAAIF,IAAI,GAAGN,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAhD,CAAX;QACAI,IAAI,CAACG,QAAL,GAAgB,CAAhB;QACAT,KAAK,CAACN,KAAN,CAAYgB,IAAZ,CAAiBJ,IAAjB;QACAjB,IAAI,CAACsB,IAAL,CACI;UACIC,KAAK,EAAE,UADX;UAEIC,IAAI,EAAE,sBAFV;UAGIC,IAAI,EAAE,SAHV;UAIIC,iBAAiB,EAAE,KAJvB;UAKIC,KAAK,EAAE;QALX,CADJ;MASH;IACJ,CApBK;IAqBNC,cAAc,EAAE,CAACjB,KAAD,EAAQC,MAAR,KAAmB;MAC/B,IAAI;QAAEC;MAAF,IAASD,MAAM,CAACE,OAApB;MACA,IAAIe,SAAS,GAAGlB,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAhD,CAAhB;MACAF,KAAK,CAACH,MAAN,GAAeqB,SAAf;IACH,CAzBK;IA0BNC,UAAU,EAAE,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MAC3B,IAAI;QAAEmB,GAAF;QAAOlB;MAAP,IAAcD,MAAM,CAACE,OAAzB;MACAH,KAAK,CAACN,KAAN,CAAY2B,OAAZ,CAAoBf,IAAI,IAAI;QACxB,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAxB,EAA8B;UAC1BI,IAAI,CAACG,QAAL,GAAgBW,GAAhB;QACH;MACJ,CAJD;IAKH,CAjCK;IAkCNE,UAAU,EAAE,CAACtB,KAAD,EAAQC,MAAR,KAAmB;MAC3B,IAAI;QAAEC;MAAF,IAASD,MAAM,CAACE,OAApB;MACA,IAAIoB,gBAAgB,GAAGvB,KAAK,CAACN,KAAN,CAAY8B,MAAZ,CAAmBlB,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAA/C,CAAvB;MACAF,KAAK,CAACN,KAAN,GAAc6B,gBAAd;IACH,CAtCK;IAuCN;IACAE,SAAS,EAAGzB,KAAD,IAAW;MAClBA,KAAK,CAACN,KAAN,GAAc,EAAd;IACH,CA1CK;IA2CNgC,cAAc,EAAE,CAAC1B,KAAD,EAAQC,MAAR,KAAmB;MAE/B,IAAI;QAAEC;MAAF,IAASD,MAAM,CAACE,OAApB;MACA,IAAIG,IAAI,GAAGN,KAAK,CAACJ,SAAN,CAAgBS,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAjD,CAAX;;MACA,IAAII,IAAI,KAAKE,SAAb,EAAwB;QACpB,IAAImB,UAAU,GAAG3B,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAhD,CAAjB;QACAyB,UAAU,CAAClB,QAAX,GAAsB,CAAtB;QACAT,KAAK,CAACJ,SAAN,CAAgBc,IAAhB,CAAqBiB,UAArB;QACAtC,IAAI,CAACsB,IAAL,CACI;UACIC,KAAK,EAAE,UADX;UAEIC,IAAI,EAAE,oCAFV;UAGIC,IAAI,EAAE;QAHV,CADJ;MASH,CAbD,MAcK;QACDzB,IAAI,CAACsB,IAAL,CAAU,UAAV,EAAsB,mCAAtB,EAA2D,SAA3D;MACH;IAEJ,CAjEK;IAkENiB,WAAW,EAAE,CAAC5B,KAAD,EAAQC,MAAR,KAAmB;MAC5B,IAAI;QAAEC;MAAF,IAASD,MAAM,CAACE,OAApB;MACA,IAAI0B,oBAAoB,GAAG7B,KAAK,CAACJ,SAAN,CAAgB4B,MAAhB,CAAuBlB,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAQ,CAACL,EAAD,CAAnD,CAA3B;MACAF,KAAK,CAACJ,SAAN,GAAkBiC,oBAAlB;IACH,CAtEK;IAuEN;IACAC,QAAQ,EAAG9B,KAAD,IAAW;MACjBA,KAAK,CAACJ,SAAN,GAAkB,EAAlB,CADiB,CACI;IACxB;EA1EK;AAToB,CAAD,CAAjC;AAwFA,MAAMmC,eAAe,GAAGzC,aAAa,CAAC0C,OAAtC;AACA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}